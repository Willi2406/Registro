@page "/Jugador/Delete/{JugadorId:int}"
@inject Registro.Services.JugadoresServices jugadoresService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Eliminar Jugador</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header text-center">
            <h5><strong>Datos del Jugador</strong></h5>
        </div>

        <div class="card-body">
            <div class="text-center">
                <h5><strong>¿Desea eliminar este jugador?</strong></h5>
            </div>
            <ul class="mt-4">
                <li><strong>JugadorId: </strong>@Jugador.JugadorId</li>
                <li><strong>Nombre: </strong>@Jugador.Nombres</li>
                <li><strong>Victorias: </strong>@Jugador.Victorias</li>
                <li><strong>Derrotas: </strong>@Jugador.Derrotas</li>
                <li><strong>Empates: </strong>@Jugador.empate</li>
            </ul>
        </div>

        <div class="card-footer text-center">
            <a href="/" class="btn btn-primary">Volver</a>
            <button type="button" class="btn btn-danger bi bi-trash" @onclick="Eliminar">Eliminar</button>
        </div>
    </div>
</div>

@code {
    [Parameter] public int JugadorId { get; set; }
    public Jugadores Jugador { get; set; } = new Jugadores();

    protected override async Task OnInitializedAsync()
    {
        Jugador = await jugadoresService.Buscar(JugadorId);
    }

    public async Task Eliminar()
    {
        var eliminado = await jugadoresService.Eliminar(Jugador.JugadorId);
        if (eliminado)
        {
            navigationManager.NavigateTo("/");
        }
    }
}

