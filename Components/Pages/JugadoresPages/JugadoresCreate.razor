@page "/Jugadores/Create"
@using Registro.Models
@inject NavigationManager Navigation
@inject Registro.Services.JugadoresServices jugadoresServices
@rendermode InteractiveServer

<PageTitle>Crear Jugador</PageTitle>

<EditForm Model="Jugador" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Crear Jugador</h5>
            </div>

            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label"><strong>Nombres</strong></label>
                    <InputText class="form-control" @bind-Value="Jugador.Nombres" />
                    <ValidationMessage For="(() => Jugador.Nombres)" />
                    @if (!string.IsNullOrEmpty(ErrorNombre))
                    {
                        <div class="text-danger mt-1">@ErrorNombre</div>
                    }
                </div>

                <!-- Los conteos vienen del resultado del juego, NO se editan aquí -->
                <div class="row g-3">
                    <div class="col">
                        <label class="form-label">Victorias</label>
                        <input class="form-control" value="@Jugador.Victorias" readonly />
                    </div>
                    <div class="col">
                        <label class="form-label">Derrotas</label>
                        <input class="form-control" value="@Jugador.Derrotas" readonly />
                    </div>
                    <div class="col">
                        <label class="form-label">Empates</label>
                        <input class="form-control" value="@Jugador.Empate" readonly />
                    </div>
                </div>
            </div>

            <div class="card-footer text-center mt-2">
                <a href="/" class="btn btn-secondary">
                    <span class="bi bi-arrow-left"></span> Volver
                </a>
                <button type="submit" class="btn btn-primary bi bi-floppy"> Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Jugadores Jugador { get; set; } = new() { Victorias = 0, Derrotas = 0, Empate = 0 };
    public string ErrorNombre { get; set; } = string.Empty;

    private async Task Guardar()
    {
        ErrorNombre = string.Empty;

        var existe = (await jugadoresServices.Listar(j => j.Nombres == Jugador.Nombres)).Any();
        if (existe)
        {
            ErrorNombre = "Ya existe otro jugador con ese nombre.";
            return;
        }

        var ok = await jugadoresServices.Guardar(Jugador);
        if (ok)
        {
            Navigation.NavigateTo("/");
        }
    }
}
